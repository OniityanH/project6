// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
        Mux(a=a[0], b=b[0], sel=sel[0], out=m0a);
 Mux(a=c[0], b=d[0], sel=sel[0], out=m0b);
 Mux(a=m0a, b=m0b, sel=sel[1], out=out[0]);
 
    Mux(a=a[1], b=b[1], sel=sel[0], out=m1a);
 Mux(a=c[1], b=d[1], sel=sel[0], out=m1b);
 Mux(a=m1a, b=m1b, sel=sel[1], out=out[1]);
 
    Mux(a=a[2], b=b[2], sel=sel[0], out=m2a);
 Mux(a=c[2], b=d[2], sel=sel[0], out=m2b);
 Mux(a=m2a, b=m2b, sel=sel[1], out=out[2]);
 
    Mux(a=a[3], b=b[3], sel=sel[0], out=m3a);
 Mux(a=c[3], b=d[3], sel=sel[0], out=m3b);
 Mux(a=m3a, b=m3b, sel=sel[1], out=out[3]);
 
    Mux(a=a[4], b=b[4], sel=sel[0], out=m4a);
 Mux(a=c[4], b=d[4], sel=sel[0], out=m4b);
 Mux(a=m4a, b=m4b, sel=sel[1], out=out[4]);
 
    Mux(a=a[5], b=b[5], sel=sel[0], out=m5a);
 Mux(a=c[5], b=d[5], sel=sel[0], out=m5b);
 Mux(a=m5a, b=m5b, sel=sel[1], out=out[5]);
 
    Mux(a=a[6], b=b[6], sel=sel[0], out=m6a);
 Mux(a=c[6], b=d[6], sel=sel[0], out=m6b);
 Mux(a=m6a, b=m6b, sel=sel[1], out=out[6]);
 
    Mux(a=a[7], b=b[7], sel=sel[0], out=m7a);
 Mux(a=c[7], b=d[7], sel=sel[0], out=m7b);
 Mux(a=m7a, b=m7b, sel=sel[1], out=out[7]);
 
    Mux(a=a[8], b=b[8], sel=sel[0], out=m8a);
 Mux(a=c[8], b=d[8], sel=sel[0], out=m8b);
 Mux(a=m8a, b=m8b, sel=sel[1], out=out[8]);
 
    Mux(a=a[9], b=b[9], sel=sel[0], out=m9a);
 Mux(a=c[9], b=d[9], sel=sel[0], out=m9b);
 Mux(a=m9a, b=m9b, sel=sel[1], out=out[9]);
 
    Mux(a=a[10], b=b[10], sel=sel[0], out=m10a);
 Mux(a=c[10], b=d[10], sel=sel[0], out=m10b);
 Mux(a=m10a, b=m10b, sel=sel[1], out=out[10]);
 
    Mux(a=a[11], b=b[11], sel=sel[0], out=m11a);
 Mux(a=c[11], b=d[11], sel=sel[0], out=m11b);
 Mux(a=m11a, b=m11b, sel=sel[1], out=out[11]);
 
    Mux(a=a[12], b=b[12], sel=sel[0], out=m12a);
 Mux(a=c[12], b=d[12], sel=sel[0], out=m12b);
 Mux(a=m12a, b=m12b, sel=sel[1], out=out[12]);
 
    Mux(a=a[13], b=b[13], sel=sel[0], out=m13a);
 Mux(a=c[13], b=d[13], sel=sel[0], out=m13b);
 Mux(a=m13a, b=m13b, sel=sel[1], out=out[13]);
 
    Mux(a=a[14], b=b[14], sel=sel[0], out=m14a);
 Mux(a=c[14], b=d[14], sel=sel[0], out=m14b);
 Mux(a=m14a, b=m14b, sel=sel[1], out=out[14]);
 
    Mux(a=a[15], b=b[15], sel=sel[0], out=m15a);
 Mux(a=c[15], b=d[15], sel=sel[0], out=m15b);
 Mux(a=m15a, b=m15b, sel=sel[1], out=out[15]);
}